<Application
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mw="clr-namespace:Serialomaniak"
             xmlns:mw2="clr-namespace:Serialomaniak.Serialowa"
             xmlns:mw3="clr-namespace:Serialomaniak.Konta"
             xmlns:konw="clr-namespace:Serialomaniak.Konta.Konwertery"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Serialomaniak.App"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

    	<ResourceDictionary>
    		<konw:KonwerterStatusu x:Key="KonwerterStatusu1"/>
    		<konw:KonwerterStatusu x:Key="KonwerterStatusu"/>
		<!--    		<SolidColorBrush x:Key="Kolor_glowny" Color="#FF202020"/>-->
		
		<SolidColorBrush x:Key="Kolor_glowny" Color="#FF111111"/>

    		<SolidColorBrush x:Key="Kolor_akcentu" Color="#ff0050"/>

            <SolidColorBrush x:Key="Kolor_obramowania" Color="Black"/>

            <mw:Ustawienia x:Key="ustawienia"/>
    		<mw:Profil x:Key="profil"/>
    		<mw3:KanalySeriali x:Key="kanaly_seriali"/>

    		<mw2:ListaSeriali x:Key="lista_seriali"/>
            
            <konw:KonwerterDaty x:Key="konwerter_daty"/>

            <Style x:Key="StylGrupListy" TargetType="{x:Type GroupItem}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Expander Header="{Binding Name}" Foreground="#FFFFFFFF" IsExpanded="True">
                                <ItemsPresenter />
                            </Expander>						
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>



            <DataTemplate DataType="{x:Type mw2:Serial}">
    			<Grid Background="#7F181818" Height="80" MouseLeave="Grid_MouseLeave_2" MouseEnter="Grid_MouseEnter_2" Width="274">
            		<Grid HorizontalAlignment="Left" Height="80" Margin="0,0,-6,0" VerticalAlignment="Top" Width="280">
    					<Rectangle Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="80" Margin="-5.333,0,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="279.333" Clip="M271.45283,-29.20718 L333.39346,0.43258596 L254.54617,165.20618 L192.60554,135.56641 z" Opacity="0.1"/>
    					<Rectangle Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="80" Margin="-5.333,0,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="279.333" Clip="M320.0394,7.3189674 L357.57974,64.81575 L204.6276,164.68003 L167.08726,107.18325 z" Opacity="0.2"/>
    					<Rectangle Fill="{Binding Status, Converter={StaticResource KonwerterStatusu}, FallbackValue=#ffffffff, Mode=OneWay}" HorizontalAlignment="Left" Height="80" Margin="-5.333,0,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="279.333" Clip="M367.84677,1.4287298 L341.44066,64.815434 L172.82023,-5.4297298 L199.22634,-68.816434 z" Opacity="0.2"/>
    					<Rectangle Fill="{Binding Status, Converter={StaticResource KonwerterStatusu}, FallbackValue=#ffffffff}" HorizontalAlignment="Left" Height="80" Margin="-5.333,0,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="279.333" Clip="M363.77711,-30.444806 L348.01061,36.387629 L170.22389,-5.5541937 L185.99039,-72.386629 z" Opacity="0.3"/>
    					<Rectangle Fill="#FFF4F4F5" HorizontalAlignment="Left" Height="80" Margin="-5.333,0,0,0" Stroke="{x:Null}" VerticalAlignment="Top" Width="279.333" Clip="M288.82039,-11.07765 L350.33795,19.430495 L269.18061,183.07865 L207.66305,152.5705 z" Opacity="0.3"/>
    				</Grid>

    				<Border Margin="0,0,194,0">
    					<Image x:Name="zdjecie" Source="{Binding ZdjecieMale}" Width="80" Height="80"/>
    				</Border>
    				<StackPanel Orientation="Vertical" Margin="0,0,24,0" HorizontalAlignment="Right" Height="80" Width="165">
    					<TextBlock Text="{Binding Nazwa, FallbackValue=Nazwa serialu}"
    						FontSize="18"
    						TextTrimming="CharacterEllipsis"
    						Width="Auto"
    						Margin="0,5,8,0" Foreground="White"/>
    					<TextBlock x:Name="pole_na_tytul_odcinka"
    						Text="{Binding NastepnyOdcinekTytul, FallbackValue=Tytuł odcinka}"
    						Foreground="#FFB9B9B9" FontSize="12" TextWrapping="NoWrap" Width="Auto"
    						Margin="0,3,8,0" TextTrimming="CharacterEllipsis" />
    					<TextBlock x:Name="pole_na_statystyke"
    						Text="{Binding Statystyka, FallbackValue=Statystyka}"
    						Foreground="#B2808080" FontSize="12" TextWrapping="Wrap" Width="Auto"
    						Margin="0,3,8,0" />
    				</StackPanel>
    				<StackPanel x:Name="panel_z_przyciskami" Margin="250,0,0,0" HorizontalAlignment="Left" Height="Auto" Width="22" Opacity="0">
    					<Image Height="20" Margin="0,10,0,0" Source="Okna/Grafika/ikona_love.png" Width="20" MouseDown="Image_MouseDown_3"/>
    					<Image Height="20" Margin="0" Source="Okna/Grafika/ikona_gazeta.png" Width="20" MouseDown="Image_MouseDown_1"/>
    					<Image Height="20" Margin="0" Width="20" Source="Okna/Grafika/ikona_monitor.png" MouseDown="Image_MouseDown_2"/>
    				</StackPanel>

            	</Grid>
    		</DataTemplate>

            <DataTemplate DataType="{x:Type mw2:Sezon}">
                <StackPanel Orientation="Horizontal" Height="Auto" Width="Auto">
                    <StackPanel Orientation="Vertical" Margin="5,0,0,0" HorizontalAlignment="Right" Width="Auto">
                        <StackPanel Orientation="Horizontal">
                    		<TextBlock
                        		FontSize="16"
                        		TextTrimming="CharacterEllipsis"
                        		Width="Auto"
                        		Margin="0" Text="Sezon nr"/>
                        	<TextBlock Text="{Binding NumerSezonu}"
                        		FontSize="16"
                        		TextTrimming="CharacterEllipsis"
                        		Width="Auto"
                        		Margin="3,0"/>
                        	<TextBlock
                        		FontSize="16"
                        		TextTrimming="CharacterEllipsis"
                        		Width="Auto"
                        		Margin="0" Text="(odc." Foreground="{DynamicResource Kolor_glowny}"/>
                        	<TextBlock
                        		Text="{Binding LiczbaOdcinkow}"
                        		Foreground="{DynamicResource Kolor_glowny}" FontSize="16" TextWrapping="Wrap" Width="Auto"
                        		Margin="3,0" TextTrimming="CharacterEllipsis" />
                        	<TextBlock
                        		FontSize="16"
                        		TextTrimming="CharacterEllipsis"
                        		Width="Auto"
                        		Margin="0" Text=")" Foreground="{DynamicResource Kolor_glowny}"/>
                    	</StackPanel>
                    	<TextBlock 
                    		Text="{Binding ZakresDat, FallbackValue=zakres dat}"
                    		Foreground="Black" FontSize="12" TextWrapping="Wrap" Width="Auto"
                    		Margin="0,3,0,0" TextTrimming="CharacterEllipsis" />
                    </StackPanel>
                </StackPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type mw2:Odcinek}">
                <DockPanel Height="40" Width="395">
            		<StackPanel Orientation="Horizontal" Margin="0,2" HorizontalAlignment="Right" VerticalAlignment="Center" Width="Auto" Height="Auto">
            			<CheckBox
            				IsChecked="{Binding Obejrzany}"
                            
            				Foreground="#66FFFFFF" FontSize="12" Width="Auto"
            				Margin="5,6,0,6" IsEnabled="True" Padding="0" ToolTip="Czy oznaczony jako obejrzany"
                            Checked="CheckBox_Checked_1"
                            Unchecked="CheckBox_Unchecked_1"
                            />
                        <TextBlock Text="{Binding Tytul_odcinka, FallbackValue=Tytuł odcinka}"
            				FontSize="18"
            				TextTrimming="CharacterEllipsis"
            				Width="220"
            				Margin="5,0,0,0" Height="Auto" />
            		</StackPanel>
            		<StackPanel Height="Auto" Orientation="Horizontal" Margin="0,12.02" VerticalAlignment="Center" DockPanel.Dock="Right" HorizontalAlignment="Right">
            			<TextBlock
            				Foreground="{DynamicResource Kolor_glowny}" FontSize="12" TextWrapping="Wrap" Width="Auto"
            				Margin="0" TextTrimming="CharacterEllipsis" Height="Auto" Text="odc. " />
            			<TextBlock
            				Text="{Binding NumerOdcinka, FallbackValue=7}"
            				Foreground="{DynamicResource Kolor_glowny}" FontSize="12" TextWrapping="Wrap" Width="Auto"
            				Margin="0" TextTrimming="CharacterEllipsis" Height="Auto" />
            			<TextBlock
            				Text="{Binding DataEmisji, Converter={StaticResource konwerter_daty}}"
            				Foreground="{DynamicResource Kolor_glowny}" FontSize="12" TextWrapping="Wrap"
            				Margin="3,0,0,0" Height="Auto" HorizontalAlignment="Right" />
            		</StackPanel>
            	</DockPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type mw3:Zmiana}">   
                <DockPanel Margin="0" Height="30" VerticalAlignment="Top" Width="550">
                    <Label Content="{Binding Opis}" HorizontalAlignment="Left" Height="33.884" VerticalAlignment="Top" Foreground="White" Width="430"/>
                    <StackPanel Margin="0,0,0,-3.884" Orientation="Horizontal">
                    	<Label Content="{Binding Autor}" HorizontalAlignment="Right" Height="33.884" VerticalAlignment="Top" Foreground="{DynamicResource Kolor_akcentu}" FontStyle="Italic" Width="60" HorizontalContentAlignment="Right" Opacity="0.3"/>
                    	<Label Content="{Binding Wersja}" HorizontalAlignment="Right" Height="33.884" VerticalAlignment="Top" Foreground="#4CFFFFFF" FontStyle="Italic" Width="60" HorizontalContentAlignment="Right"/>
                    </StackPanel>
                </DockPanel>
            </DataTemplate>

            <DataTemplate DataType="{x:Type mw2:Link}">
                <DockPanel Height="40" Width="620">
                    <StackPanel Orientation="Horizontal" Margin="0,2" HorizontalAlignment="Right" VerticalAlignment="Center" Width="Auto" Height="30">
                        <TextBlock Text="{Binding Wersja, FallbackValue=Wersja odcinka}"
            				FontSize="18"
            				TextTrimming="CharacterEllipsis"
            				Width="75"
            				Margin="5,0,0,0" Height="Auto" Foreground="White" />
                        <TextBlock Text="{Binding Dystrybutor, FallbackValue=Dystrybutor odcinka}"
            				FontSize="18"
            				TextTrimming="CharacterEllipsis"
            				Width="150"
            				Margin="5,0,0,0" Height="Auto" Foreground="White" />
                        <TextBlock Text="{Binding Adres}"
                        	FontSize="10.667"
                        	TextTrimming="CharacterEllipsis"
                        	Width="230"
                        	Margin="5,0,0,0" Height="Auto" Foreground="White" Opacity="0.5" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0,2" VerticalAlignment="Center" DockPanel.Dock="Right" HorizontalAlignment="Right">
                    	<TextBlock VerticalAlignment="Center" FontSize="16" Height="30" Margin="0,0,3,0">
                            <Hyperlink NavigateUri="{Binding Adres}" Click="Hyperlink_Click_1" TextDecorations="{x:Null}">
                                <Run Text="przejdź do odcinka" Foreground="#ff0050" />
                            </Hyperlink>
                        </TextBlock>
                        
                    </StackPanel>
                </DockPanel>
            </DataTemplate>



            <Style x:Key="StylListySeriali" TargetType="{x:Type ListBoxItem}">
    			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ListBoxItem}">
    						<Border        x:Name="Border"     Padding="2"   SnapsToDevicePixels="true">
    							<ContentPresenter />
    						</Border>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsSelected" Value="true">
    								<Setter TargetName="Border" Property="Background"
    									Value="{StaticResource Kolor_akcentu}"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>                    
    				</Setter.Value>
    			</Setter>
    		</Style>

            <Style TargetType="{x:Type Button}">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" 
                         Value="False">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Grid>
                                        <Border BorderBrush="Black" BorderThickness="1" HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto">
                                            <TextBlock Text="{TemplateBinding Content}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        </Border>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
                
                <Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Button}">
                <Grid>
                    <Border BorderBrush="{DynamicResource Kolor_akcentu}" BorderThickness="1" HorizontalAlignment="Stretch" Height="Auto" Margin="0" VerticalAlignment="Stretch" Width="Auto" Background="{DynamicResource Kolor_glowny}">
                    	<Border.Effect>
                    		<DropShadowEffect Opacity="0.5" BlurRadius="25"/>
                    	</Border.Effect>
                        <TextBlock Text="{TemplateBinding Content}" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>                    
                    <!--<VisualStateManager.VisualStateGroups>
                        <VisualStateGroup x:Name="CommonStates">
                            <VisualState x:Name="MouseOver"/>
                            <VisualState x:Name="Pressed"/>
                            <VisualState x:Name="Disabled"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="FocusStates">
                            <VisualState x:Name="Focused"/>
                        </VisualStateGroup>
                        <VisualStateGroup x:Name="ValidationStates">
                            <VisualState x:Name="InvalidFocused"/>
                            <VisualState x:Name="InvalidUnfocused"/>
                        </VisualStateGroup>
                    </VisualStateManager.VisualStateGroups>-->
                </Grid>
				</ControlTemplate>
				</Setter.Value>
				</Setter>
            </Style>


            <!--</Unikalny styl paska listy>-->

    		<Style x:Key="ScrollBarPageButton"
    			TargetType="{x:Type RepeatButton}">
    			<Setter Property="SnapsToDevicePixels"
    				Value="True" />
    			<Setter Property="OverridesDefaultStyle"
    				Value="true" />
    			<Setter Property="IsTabStop"
    				Value="false" />
    			<Setter Property="Focusable"
    				Value="false" />
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type RepeatButton}">
    						<Border Background="Transparent" />
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>

    		<ControlTemplate x:Key="VerticalScrollBar"
    			TargetType="{x:Type ScrollBar}">
    			<Grid Width="5">
    				<Border Grid.RowSpan="3"
    					Background="#0C000000" />
    				<Track x:Name="PART_Track"
    					Grid.Row="1"
    					IsDirectionReversed="true">
    					<Track.Thumb>
    						<Thumb Height="Auto"  Style="{DynamicResource SimpleSliderThumb}" Width="Auto"/>
    					</Track.Thumb>
    				</Track>
        		
    			</Grid>
    		</ControlTemplate>

    		<Style x:Key="{x:Type ScrollBar}"
    			TargetType="{x:Type ScrollBar}">
    			<Setter Property="SnapsToDevicePixels"
    				Value="True" />
    			<Setter Property="OverridesDefaultStyle"
    				Value="true" />
    			<Style.Triggers>
    				<Trigger Property="Orientation"
    					Value="Horizontal">
    					<Setter Property="Width"
    						Value="Auto" />
    					<Setter Property="Height"
    						Value="18" />
    					<Setter Property="Template" >
    						<Setter.Value>

    							<ControlTemplate
    								TargetType="{x:Type ScrollBar}">
    								<Grid>
    									<Grid.ColumnDefinitions>
    										<ColumnDefinition MaxWidth="18" />
    										<ColumnDefinition Width="0.00001*" />
    										<ColumnDefinition MaxWidth="18" />
    									</Grid.ColumnDefinitions>
    									<Border Grid.ColumnSpan="3"
    										Background="{DynamicResource Kolor_akcentu}" />
    									<RepeatButton Grid.Column="0"
    										Width="18"
    										Command="ScrollBar.LineLeftCommand"
    										Content="M 4 0 L 4 8 L 0 4 Z" >
    										<RepeatButton.Style>
    											<!--<SnippetRepeatButton>-->
    											<Style
    												TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels"
    													Value="True" />
    												<Setter Property="OverridesDefaultStyle"
    													Value="true" />
    												<Setter Property="Focusable"
    													Value="false" />
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Border x:Name="Border"
    																Margin="1"
    																BorderThickness="1">
    																<Border.BorderBrush>
    																	<LinearGradientBrush StartPoint="0,0"
    																		EndPoint="0,1">
    																		<LinearGradientBrush.GradientStops>
    																			<GradientStopCollection>
    																				<GradientStop
    																					Offset="0.0" />
    																				<GradientStop
    																					Offset="1.0" />
    																			</GradientStopCollection>
    																		</LinearGradientBrush.GradientStops>
    																	</LinearGradientBrush>
    																</Border.BorderBrush>
    																<Border.Background>
    																	<LinearGradientBrush StartPoint="0,0"
    																		EndPoint="0,1">
    																		<LinearGradientBrush.GradientStops>
    																			<GradientStopCollection>
    																				<GradientStop/>
    																				<GradientStop
    																					Offset="1.0" />
    																			</GradientStopCollection>
    																		</LinearGradientBrush.GradientStops>
    																	</LinearGradientBrush>
    																</Border.Background>
    																<VisualStateManager.VisualStateGroups>
    																	<VisualStateGroup x:Name="CommonStates">
    																		<VisualState x:Name="Normal" />
    																		<VisualState x:Name="MouseOver" />
    																		<VisualState x:Name="Pressed">
    																			<Storyboard>
    																				<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
    																					Storyboard.TargetProperty="(Panel.Background).                       (GradientBrush.GradientStops)[1].(GradientStop.Color)">
    																					<EasingColorKeyFrame KeyTime="0" />
    																				</ColorAnimationUsingKeyFrames>
    																			</Storyboard>
    																		</VisualState>
    																		<VisualState x:Name="Disabled">
    																			<Storyboard>
    																				<ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
    																					Storyboard.TargetProperty="(Shape.Fill).                       (SolidColorBrush.Color)">
    																					<EasingColorKeyFrame KeyTime="0" />
    																				</ColorAnimationUsingKeyFrames>
    																			</Storyboard>
    																		</VisualState>
    																	</VisualStateGroup>
    																</VisualStateManager.VisualStateGroups>
    																<Path x:Name="Arrow"
    																	HorizontalAlignment="Center"
    																	VerticalAlignment="Center"
    																	Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
    																	<Path.Fill>
    																		<SolidColorBrush/>
    																	</Path.Fill>
    																</Path>
    															</Border>
    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    									<!--<SnippetRepeatButtonStyle_a_lileib>-->
    									<Track x:Name="PART_Track"
    										Grid.Column="1"
    										IsDirectionReversed="False">
    										<Track.DecreaseRepeatButton>
    											<RepeatButton Style="{StaticResource ScrollBarPageButton}"
    												Command="ScrollBar.PageLeftCommand" />
    										</Track.DecreaseRepeatButton>
    										<Track.Thumb>
    											<Thumb
    												Margin="0,1,0,1">
    												<Thumb.Background>
    													<LinearGradientBrush StartPoint="0,0"
    														EndPoint="0,1">
    														<LinearGradientBrush.GradientStops>
    															<GradientStopCollection>
    																<GradientStop
    																	Offset="0.0" />
    																<GradientStop
    																	Offset="1.0" />
    															</GradientStopCollection>
    														</LinearGradientBrush.GradientStops>
    													</LinearGradientBrush>

    												</Thumb.Background>
    											</Thumb>
    										</Track.Thumb>
    										<Track.IncreaseRepeatButton>
    											<RepeatButton Style="{StaticResource ScrollBarPageButton}"
    												Command="ScrollBar.PageRightCommand" />
    										</Track.IncreaseRepeatButton>
    									</Track>
    									<!--</SnippetRepeatButtonStyle_a_lileib>-->
    									<RepeatButton Grid.Column="3"
    										Width="18"
    										Command="ScrollBar.LineRightCommand"
    										Content="M 0 0 L 4 4 L 0 8 Z" >
    										<RepeatButton.Style>
    											<!--<SnippetRepeatButton>-->
    											<Style
    												TargetType="{x:Type RepeatButton}">
    												<Setter Property="SnapsToDevicePixels"
    													Value="True" />
    												<Setter Property="OverridesDefaultStyle"
    													Value="true" />
    												<Setter Property="Focusable"
    													Value="false" />
    												<Setter Property="Template">
    													<Setter.Value>
    														<ControlTemplate TargetType="{x:Type RepeatButton}">
    															<Rectangle x:Name="Border" Margin="1" Fill="Red"/>

    														</ControlTemplate>
    													</Setter.Value>
    												</Setter>
    											</Style>
    										</RepeatButton.Style>
    									</RepeatButton>
    								</Grid>
    							</ControlTemplate>

    						</Setter.Value>
    					</Setter>
    				</Trigger>
    				<Trigger Property="Orientation"
    					Value="Vertical">
    					<Setter Property="Width"
    						Value="18" />
    					<Setter Property="Height"
    						Value="Auto" />
    					<Setter Property="Template"
    						Value="{StaticResource VerticalScrollBar}" />
    				</Trigger>
    			</Style.Triggers>
    		</Style>
    		<Style x:Key="SimpleSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
    			<Setter Property="SnapsToDevicePixels" Value="true"/>
    			<Setter Property="Height" Value="14"/>
    			<Setter Property="Width" Value="14"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Thumb}">
    						<Grid>
    							<Rectangle x:Name="Rectangle"  Fill="{StaticResource Kolor_akcentu}" StrokeThickness="1"/>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ToggleButton}">
    						<Border Padding="{TemplateBinding Padding}">
    							<Grid Background="Transparent" SnapsToDevicePixels="False">
    								<Grid.RowDefinitions>
    									<RowDefinition Height="19"/>
    									<RowDefinition Height="*"/>
    								</Grid.RowDefinitions>
    								<Grid>
    									<Grid.LayoutTransform>
    										<TransformGroup>
    											<TransformGroup.Children>
    												<TransformCollection>
    													<RotateTransform Angle="-90"/>
    												</TransformCollection>
    											</TransformGroup.Children>
    										</TransformGroup>
    									</Grid.LayoutTransform>
    									<Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    								</Grid>
    								<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
    							</Grid>
    						</Border>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsChecked" Value="true">
    								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
    							</Trigger>
    							<Trigger Property="IsMouseOver" Value="true">
    								<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
    								<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
    							</Trigger>
    							<Trigger Property="IsPressed" Value="true">
    								<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
    								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
    								<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ToggleButton}">
    						<Border Padding="{TemplateBinding Padding}">
    							<Grid Background="Transparent" SnapsToDevicePixels="False">
    								<Grid.ColumnDefinitions>
    									<ColumnDefinition Width="19"/>
    									<ColumnDefinition Width="*"/>
    								</Grid.ColumnDefinitions>
    								<Grid>
    									<Grid.LayoutTransform>
    										<TransformGroup>
    											<TransformGroup.Children>
    												<TransformCollection>
    													<RotateTransform Angle="180"/>
    												</TransformCollection>
    											</TransformGroup.Children>
    										</TransformGroup>
    									</Grid.LayoutTransform>
    									<Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    								</Grid>
    								<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
    							</Grid>
    						</Border>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsChecked" Value="true">
    								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
    							</Trigger>
    							<Trigger Property="IsMouseOver" Value="true">
    								<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
    								<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
    							</Trigger>
    							<Trigger Property="IsPressed" Value="true">
    								<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
    								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
    								<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ToggleButton}">
    						<Border Padding="{TemplateBinding Padding}">
    							<Grid Background="Transparent" SnapsToDevicePixels="False">
    								<Grid.RowDefinitions>
    									<RowDefinition Height="19"/>
    									<RowDefinition Height="*"/>
    								</Grid.RowDefinitions>
    								<Grid>
    									<Grid.LayoutTransform>
    										<TransformGroup>
    											<TransformGroup.Children>
    												<TransformCollection>
    													<RotateTransform Angle="90"/>
    												</TransformCollection>
    											</TransformGroup.Children>
    										</TransformGroup>
    									</Grid.LayoutTransform>
    									<Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    									<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    								</Grid>
    								<ContentPresenter HorizontalAlignment="Center" Margin="0,4,0,0" Grid.Row="1" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Top"/>
    							</Grid>
    						</Border>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsChecked" Value="true">
    								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
    							</Trigger>
    							<Trigger Property="IsMouseOver" Value="true">
    								<Setter Property="Stroke" TargetName="circle" Value="#FF3C7FB1"/>
    								<Setter Property="Stroke" TargetName="arrow" Value="#222"/>
    							</Trigger>
    							<Trigger Property="IsPressed" Value="true">
    								<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
    								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
    								<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="ExpanderHeaderFocusVisual">
    			<Setter Property="Control.Template">
    				<Setter.Value>
    					<ControlTemplate>
    						<Border>
    							<Rectangle Margin="0" SnapsToDevicePixels="true" Stroke="Black" StrokeThickness="1" StrokeDashArray="1 2"/>
    						</Border>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ToggleButton}">
    						<Border Padding="{TemplateBinding Padding}">
    							<VisualStateManager.VisualStateGroups>
    								<VisualStateGroup x:Name="CommonStates"/>
    								<VisualStateGroup x:Name="FocusStates"/>
    								<VisualStateGroup x:Name="CheckStates"/>
    								<VisualStateGroup x:Name="ValidationStates"/>
    							</VisualStateManager.VisualStateGroups>
    							<Grid Background="Transparent" SnapsToDevicePixels="False">
    								<Grid.ColumnDefinitions>
    									<ColumnDefinition Width="19"/>
    									<ColumnDefinition Width="*"/>
    								</Grid.ColumnDefinitions>
    								<Ellipse x:Name="circle" HorizontalAlignment="Center" Height="19" Stroke="DarkGray" VerticalAlignment="Center" Width="19"/>
    								<Path x:Name="arrow" Data="M 1,1.5 L 4.5,5 L 8,1.5" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="#666" StrokeThickness="2" VerticalAlignment="Center"/>
    								<ContentPresenter x:Name="contentPresenter" Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
    							</Grid>
    						</Border>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsChecked" Value="true">
    								<Setter Property="Data" TargetName="arrow" Value="M 1,4.5  L 4.5,1  L 8,4.5"/>
    							</Trigger>
    							<Trigger Property="IsMouseOver" Value="true">
    								<Setter Property="Stroke" TargetName="circle" Value="{DynamicResource Kolor_akcentu}"/>
    								<Setter Property="Stroke" TargetName="arrow" Value="{DynamicResource Kolor_akcentu}"/>
    								<Setter Property="OpacityMask" TargetName="contentPresenter" Value="{x:Null}"/>
    							</Trigger>
    							<Trigger Property="IsPressed" Value="true">
    								<Setter Property="Stroke" TargetName="circle" Value="#FF526C7B"/>
    								<Setter Property="StrokeThickness" TargetName="circle" Value="1.5"/>
    								<Setter Property="Stroke" TargetName="arrow" Value="#FF003366"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<Style TargetType="{x:Type Expander}">
    			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    			<Setter Property="Background" Value="Transparent"/>
    			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    			<Setter Property="VerticalContentAlignment" Value="Stretch"/>
    			<Setter Property="BorderBrush" Value="Transparent"/>
    			<Setter Property="BorderThickness" Value="1"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type Expander}">
    						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="3" SnapsToDevicePixels="true">
    							<DockPanel>
    								<ToggleButton x:Name="HeaderSite" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" Content="{TemplateBinding Header}" DockPanel.Dock="Top" Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" FontStyle="{TemplateBinding FontStyle}" FontStretch="{TemplateBinding FontStretch}" FontSize="{TemplateBinding FontSize}" FontFamily="{TemplateBinding FontFamily}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" MinWidth="0" MinHeight="0" Padding="{TemplateBinding Padding}" Style="{StaticResource ExpanderDownHeaderStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
    								<ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" Visibility="Collapsed" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    							</DockPanel>
    						</Border>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsExpanded" Value="true">
    								<Setter Property="Visibility" TargetName="ExpandSite" Value="Visible"/>
    							</Trigger>
    							<Trigger Property="ExpandDirection" Value="Right">
    								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right"/>
    								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left"/>
    								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}"/>
    							</Trigger>
    							<Trigger Property="ExpandDirection" Value="Up">
    								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top"/>
    								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom"/>
    								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}"/>
    							</Trigger>
    							<Trigger Property="ExpandDirection" Value="Left">
    								<Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left"/>
    								<Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right"/>
    								<Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}"/>
    							</Trigger>
    							<Trigger Property="IsEnabled" Value="false">
    								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Style>
    		<SolidColorBrush x:Key="kolor_zielony" Color="#FF6CFF00"/>
            
    	</ResourceDictionary>


    </Application.Resources>
</Application>
